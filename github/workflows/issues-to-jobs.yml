name: Convert job Issues to JSON

on:
  issues:
    types: [opened, edited, labeled]

jobs:
  convert:
    if: contains(toJson(github.event.issue.labels), 'job')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate issue body is JSON
        run: |
          echo '${{ github.event.issue.body }}' | jq . > /dev/null
        shell: bash

      - name: Parse issue body and save /jobs/{slug}.json
        run: |
          set -e
          mkdir -p jobs
          BODY='${{ github.event.issue.body }}'

          # write body to temp, then extract slug
          echo "$BODY" > jobs/_incoming.json
          SLUG=$(jq -r '.slug' jobs/_incoming.json)
          TITLE=$(jq -r '.title' jobs/_incoming.json)
          COMPANY=$(jq -r '.company' jobs/_incoming.json)
          LOCATION=$(jq -r '.location' jobs/_incoming.json)
          START=$(jq -r '.startDate' jobs/_incoming.json)
          END=$(jq -r '.endDate' jobs/_incoming.json)
          APPLYBY=$(jq -r '.applyBy' jobs/_incoming.json)
          DESCRIPTION=$(jq -r '.descriptionHtml' jobs/_incoming.json)

          if [ -z "$SLUG" ] || [ "$SLUG" = "null" ]; then
            echo "❌ Missing slug in issue body JSON."
            exit 1
          fi

          # format into clean JSON with readable date format
          jq --arg title "$TITLE" \
             --arg company "$COMPANY" \
             --arg location "$LOCATION" \
             --arg start "$START" \
             --arg end "$END" \
             --arg apply "$APPLYBY" \
             --arg description "$DESCRIPTION" \
             '{slug: .slug, title: $title, company: $company, location: $location, startDate: $start, endDate: $end, applyBy: $apply, descriptionHtml: $description}' jobs/_incoming.json > "jobs/${SLUG}.json"

          rm jobs/_incoming.json

      - name: Rebuild jobs.json index
        run: |
          set -e
          shopt -s nullglob
          FILES=(jobs/*.json)
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "[]" > jobs/jobs.json
          else
            jq -s '[ .[] | del(.descriptionHtml) ]' "${FILES[@]}" > jobs/jobs.json
          fi

      - name: Commit JSON + index
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add jobs/*.json
          git commit -m "Publish job from Issue #${{ github.event.issue.number }}" || echo "No changes"
          git push

      - name: Comment + close Issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ✅ Thanks! This internship has been published to the job board.
            File: `/jobs/${{ fromJson(github.event.issue.body).slug }}.json`
            Index updated: `/jobs/jobs.json`
